@using FinTech101.Models
@{
    var years = ViewBag.years;
    string charttitle = Convert.ToString(ViewBag.title);
    string howerdescription = Convert.ToString(ViewBag.Descirption);
}

<style>
    body {
        font: 10px sans-serif;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .bar {
        /*fill: orange;*/
    }

        .bar:hover {
            fill: royalblue;
        }

    .x.axis path {
        display: none;
    }

    .d3-tip {
        line-height: 1;
        font-weight: bold;
        padding: 12px;
        background: rgba(0, 0, 0, 0.8);
        color: #fff;
        border-radius: 2px;
    }

        /* Creates a small triangle extender for the tooltip */
        .d3-tip:after {
            box-sizing: border-box;
            display: marker;
            font-size: 10px;
            width: 100%;
            line-height: 1;
            color: rgba(0, 0, 0, 0.8);
            content: "\25BC";
            position: absolute;
            text-align: center;
        }

        /* Style northward tooltips differently */
        .d3-tip.n:after {
            margin: -1px 0 0 0;
            top: 100%;
            left: 0;
        }

     .line {
            fill: none;
            stroke: #444;
            stroke-width: 1.5px;
            stroke-opacity:0.5;
     
        }
</style>

<div id="bargraph"></div>

<script src="~/Content/d3.js/d3.min.js"></script>
<script src="~/Content/d3.js/d3.tip.v0.6.3.js"></script>

<script>
    //d3.select("svg").remove();
    var dataset = @Html.Raw(years);

    var w = 800;
    var h = 500;
    var padding = 60;
  

    var title= "@charttitle";
    var description="@howerdescription";

    var tip = d3.tip()
      .attr('class', 'd3-tip')
      .offset([-10,0])
      
   


    function fetchResult(qno, data) {
        initResults();

        $.ajax('/home/' + qno, {
            data: data,
            cache: false,
            success: function (data, status, xhrObj) {
                console.log("ajax success");
                $('#result').html("");
                $('#result').empty().append(data);
            },
            error: function (xhrObj, status, errorThrown) {
                resultWasError();
            }
        });
    }

    //Create scale functions
    var xScale = d3.scale.linear()
                         .domain([0, d3.max(dataset, function(d) { return d.Key; })])
                         .range([padding, w - padding]);

    var yScale = d3.scale.ordinal()
                         .rangeRoundBands([0, h], .1)
                         .domain(dataset.map(function (d) { return d.Value; }));

    
    var y2 = d3.scale.ordinal()
                         .rangeRoundBands([0, h+padding+5], 0)
                         .domain(dataset.map(function (d) { return d.Value; }));


    //Define X axis
    var xAxis = d3.svg.axis()
                      .scale(xScale)
                      .orient("bottom")
                      .ticks(5);

    //Define Y axis
    var yAxis = d3.svg.axis()
                      .scale(yScale)
                      .orient("left")


    //Create SVG element
    var svg = d3.select("#bargraph")
                .append("svg")
                .attr("width", w+padding)
                .attr("height", h+padding);

    svg.call(tip);

    svg.selectAll("rect")
        .data(dataset)
        .enter()
        .append("rect")
        .attr("class", "bar")
        .attr("x", 0 + padding )
        .attr("width",function (d) { return  xScale(d.Key)-padding; })
        .attr("y", function (d) { return yScale(d.Value) })
        .attr("height",  yScale.rangeBand())
        .attr("fill", "Red")
        .on('mouseover', function(d){
           
            tip.html(function (d) {
                return "<strong>Entries are :</strong> <span style='color:red'>" + d.Key + "</span> <br/>"+ description ;
            })
            tip.show(d)
        })
        .on('mouseout', function(d){
            tip.hide(d)
            
        })
        .on('click', function (d){
            tip.hide(d) //hide the tip Over the bar...
            //call controller with ajax
            fetchResult('q1_d3',
           {
               setID: $('#set_selection').val(),
               seID: $('#q1_se').val(),
               upOrDown: $('#q1_uod').val(),
               percent: $('#q1_percent').val(),
               fromYear: $('#q1_from_year').val(),
               toYear: $('#q1_to_year').val(),
               yearvalue :d.Value
           });

        });



    //Create X axis
    svg.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(0," + h  + ")")
        .call(xAxis)
        .on("click", function(d) {  alert('clicked!'); });

    //Create Y axis
    svg.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(" + padding + ",0)")
        .call(yAxis)
        .on("click", function(d) {  alert('clicked!'); });

    var dataSum =0;
    dataSum = d3.sum(dataset, function (d) { return d.Key; });

    var line = d3.svg.line()
       .x(function (d, i) { return xScale(dataSum / dataset.length); })
       .y(function (d, i) { return y2(d.Value) + i; })
       
    svg.append("path")
        .datum(dataset)
        .attr("class", "line")
        .attr("d", line)
        .style("stroke-dasharray", ("3, 3"))
        .on('mouseover', function(d){
            
            tip.html(function (d) {
                return "<strong>Average is </strong> <span style='color:red'>" + dataSum / dataset.length + "</span>" ;
            })
            tip.show(d)
        })
        .on('mouseout', function(d){
            tip.hide(d)
            
        });

    svg.append("text")
        .attr("x", (width / 2))             
        .attr("y", 10)
        .attr("text-anchor", "middle")  
        .style("font-size", "16px") 
        .text("Value vs Date Graph");

</script>

